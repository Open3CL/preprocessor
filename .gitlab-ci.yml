include:
  - project: 'renovate-bot/renovate-runner'
    file: '/templates/renovate.gitlab-ci.yml'
stages:
  - prepare
  - qa
  - deploy

default:
  image: node:20.12.0

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - when: always

.if-code-change:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - changes:
        - package-lock.json
        - package.json
        - .gitlab-ci.yml
        - 'src/**/*'
        - 'tests/**/*'

install:
  stage: prepare
  extends:
    - .if-code-change
  script:
    - npm ci --cache .npm --prefer-offline
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
      - node_modules/
    policy: push

analysis:
  stage: qa
  extends:
    - .if-code-change
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
      - node_modules/
    policy: pull
  script:
    - npm run qa:prettier:check
    - npm run qa:lint
    - npm run qa:duplication

test:
  stage: qa
  extends:
    - .if-code-change
  artifacts:
    when: always
    paths:
      - junit-report.xml
    reports:
      junit: junit-report.xml
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
      - node_modules/
    policy: pull
  script:
    - npm run test:ci
  coverage: '/Coverage: (\d{1,3}\.?\d{0,})%/'

publish_library:
  stage: deploy
  only:
    - main
  except:
    - schedules
  needs:
    - test
  dependencies:
    - test
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
      - node_modules/
    policy: pull
  before_script:
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${NPM_TOKEN}" > .npmrc
    - echo "@${CI_PROJECT_NAMESPACE}:registry=${PACKAGE_REGISTRY_URL}" >> .npmrc
  script:
    - npm publish --registry "${PACKAGE_REGISTRY_URL}"
  variables:
    PACKAGE_REGISTRY_URL: '$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/npm/'
    NPM_TOKEN: $CI_JOB_TOKEN
